###sys-buscar-folder-hijo

-recibe un folder* y un name
-Si folder* es null -> F
-Si folder-name de folder* es == name -> Folder (encontro el folder buscado)
-Else como name no coincide entramos al contenido de folder* y buscamos ahí con 

###sys-buscar-folder-hijo-aux

realiza lo mismo que la anterior y con car content-hijos toma una carpeta de ahí
si no coincide realiza la llamada auxiliar nuevamente

RECURSION ARBOREA

###sys-insertar-folder

-Recibe un system X folder* X name
-Si el folder es null -> Crea nuevo folder vacio
-Si hay un duplicado en la llamada sys-buscar-folder-hijo -> #f
-Else agrega folder-nuevo al folder-content de folder*
ya que no hay duplicado y el folder padre no es null

##actualizar-hijos
 
-Recibe folder-padre X folder-buscado (name) X nuevo-folder
-Retorna el folder-padre con su content actualizado
-Si el folder-name-hijo == folder-buscado -> Ret nuevo-folder
                                     else -> Ret hijo
Map aplica esta funcion a cada folder de los hijos de folder-padre


###sys-insertar-folder-en-hijos

-Recibe un system X folder-padre X lista-path ("folder1" "folder21")
-Si nombres-folders es null retorna el folder-padre
-Sino:
-- folder-buscado: (car nombres folders) # "Folder1"
-- folder-encontrado: (sys-buscar-folder-hijo padre folder-buscado)
-- Si folder-encontrado != #f
   -> actualizar-hijos . padre X folder-buscado X H
      H: sys-insertar-folder-en-hijos . system X  folder-encontrado X (sgte folder en path)
-- Si folder-encontrado == #f
