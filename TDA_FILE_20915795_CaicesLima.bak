#lang racket

(require racket/date)
(provide (all-defined-out))

(define (crnt-date-file)
          (define fecha (current-date))
                          (string-append
                             (number->string (date-hour fecha))
                             ":"
                             (number->string (date-minute fecha))
                             " - "
                             (number->string (date-day fecha))
                             "/"
                             (number->string (date-month fecha))
                             "/"
                             (number->string (date-year fecha))))


(define make-file (lambda (file-name ;0
                           extension
                           text
                           security
                           password
                           create-date
                           mod-date
                           location
                           creator
                           size);9
                        (list file-name ;0
                              extension
                              text
                              security
                              password
                              create-date
                              mod-date
                              location
                              creator
                              size)))

(define file (lambda (name ext text . security)
               (make-file name
                          ext
                          text
                          security ;sec
                          "" ;pass
                          (crnt-date-file)
                          (crnt-date-file)
                          ""
                          ""
                          null)))
;(define hide?)
;(define read-only?)

(define file1 (file "goo4.docx" "docx" "hello world 4" #\h #\r))
(define file2 (file "goo4.docx" "docx" "hello world 4"))

(define hide? (lambda (file-arg)
                (if (not(member #\h (get-file-security file-arg)))
                    #f
                    #t)))

(define read-only? (lambda (file-arg)
                (if (not(member #\r (get-file-security file-arg)))
                    #f
                    #t)))

(define (get-file-name file)
  (list-ref file 0))

(define (get-extension file)
  (list-ref file 1))

(define (get-text file)
  (list-ref file 2))

(define (get-file-security file)
  (list-ref file 3))

(define (get-file-password file)
  (list-ref file 4))

(define (get-create-date-file file)
  (list-ref file 5))

(define (get-mod-date-file file)
  (list-ref file 6))

(define (get-file-location file)
  (list-ref file 7))

(define (get-file-creator file)
  (list-ref file 8))

(define (get-file-size file)
  (list-ref file 9))





